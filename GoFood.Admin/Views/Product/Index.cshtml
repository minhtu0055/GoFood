@using GoFood.ViewModels.Catalog.Products
@using GoFood.ViewModels.Common
@using GoFood.Data.Enums
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@model PagedResult<ProductViewModels>

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var baseUrl = Configuration["BaseAddress"];
}

<div class="text-end mb-4">
    <a asp-action="Create" asp-controller="Product" class="btn btn-primary">
        <i class="bx bx-plus me-1"></i> Tạo sản phẩm mới
    </a>
</div>

<div class="card">
    <h5 class="card-header">@TempData["result"]</h5>
    <div class="card-header">
        <form asp-action="Index" method="get">
            <div class="row">
                <div class="col-md-4 mb-2">
                    <label class="form-label">Tên sản phẩm</label>
                    <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" placeholder="Nhập tên sản phẩm..." />
                </div>
                <div class="col-md-3 mb-2">
                    <label class="form-label">Danh mục</label>
                    <select name="categoryId" class="form-select" asp-items="@ViewBag.Categories">
                        <option value="">Tất cả danh mục</option>
                    </select>
                </div>
                <div class="col-md-3 mb-2">
                    <label class="form-label">Giá</label>
                    <div class="input-group">
                        <input type="number" name="minPrice" class="form-control" placeholder="Từ" value="@ViewBag.MinPrice" min="0" />
                        <input type="number" name="maxPrice" class="form-control" placeholder="Đến" value="@ViewBag.MaxPrice" min="0" />
                    </div>
                </div>
                <div class="col-md-2 mb-2 d-flex align-items-end">
                    <div class="btn-group w-100">
                        <button type="submit" class="btn btn-primary">
                            <i class="bx bx-search"></i> Tìm
                        </button>
                        <button type="button" onclick="window.location.href='/Product/Index'" class="btn btn-dark">
                            <i class="bx bx-reset"></i> Reset
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="table-responsive text-nowrap">
        <table class="table">
            <thead>
                <tr>
                    <th>TÊN</th>
                    <th>GIÁ</th>
                    <th>SỐ LƯỢNG</th>
                    <th>DANH MỤC</th>
                    <th>TRẠNG THÁI</th>
                    <th>HÌNH ẢNH</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @if (Model?.Items != null && Model.Items.Any())
                {
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>
                                <span>@item.Price.ToString("N0")đ</span>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                            <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                            <td>
                                <span class="badge bg-label-@(item.Status == GoFood.Data.Enums.ProductStatus.Active ? "success" : "danger") me-1">
                                    @(item.Status == GoFood.Data.Enums.ProductStatus.Active ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                @if (item.Images != null && item.Images.Any())
                                {
                                    if (item.Images.Count == 1)
                                    {
                                        <img src="@(baseUrl + item.Images.First())" alt="@item.Name" class="rounded" style="width: 80px; height: 80px; object-fit: cover;" onerror="this.src='/images/no-image.png'" />
                                    }
                                    else
                                    {
                                        <div id="carousel-@item.Id" class="carousel slide" data-bs-ride="carousel" style="width: 80px; height: 80px;">
                                            <div class="carousel-inner">
                                                @for (int i = 0; i < item.Images.Count; i++)
                                                {
                                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                                        <img src="@(baseUrl + item.Images[i])" alt="@item.Name" class="d-block w-100 rounded" style="height: 80px; object-fit: cover;" onerror="this.src='/images/no-image.png'" />
                                                    </div>
                                                }
                                            </div>
                                            <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@item.Id" data-bs-slide="prev">
                                                <span class="carousel-control-prev-icon"></span>
                                            </button>
                                            <button class="carousel-control-next" type="button" data-bs-target="#carousel-@item.Id" data-bs-slide="next">
                                                <span class="carousel-control-next-icon"></span>
                                            </button>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <img src="/images/no-image.png" alt="No Image" class="rounded" style="width: 80px; height: 80px; object-fit: cover;" />
                                }
                            </td>
                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="@Url.Action("Edit", new { id = item.Id })">
                                            <i class="bx bx-edit-alt me-1"></i> Edit
                                        </a>
                                        <a class="dropdown-item" href="@Url.Action("Details", new { id = item.Id })">
                                            <i class="bx bx-detail me-1"></i> Details
                                        </a>
                                        @if (item.Status == GoFood.Data.Enums.ProductStatus.Active)
                                        {
                                            <form id="deactivate-@item.Id" asp-action="Delete" asp-controller="Product" method="post" style="display: inline;">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="button" class="dropdown-item text-danger" 
                                                        onclick="confirmDeactivate('deactivate-@item.Id')">
                                                    <i class="bx bx-trash me-1"></i> Vô hiệu hóa
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form id="activate-@item.Id" asp-action="Active" asp-controller="Product" method="post" style="display: inline;">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="button" class="dropdown-item text-success"
                                                        onclick="confirmActivate('activate-@item.Id')">
                                                    <i class="bx bx-check-circle me-1"></i> Kích hoạt
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @await Component.InvokeAsync("Pager", Model)
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var selectedCategory = '@ViewBag.CategoryId';
            if (selectedCategory) {
                $('select[name="categoryId"]').val(selectedCategory);
            }
        });

        function confirmDeactivate(formId) {
            if (confirm('Bạn có chắc muốn vô hiệu hóa sản phẩm này?')) {
                document.getElementById(formId).submit();
            }
        }

        function confirmActivate(formId) {
            if (confirm('Bạn có chắc muốn kích hoạt sản phẩm này?')) {
                document.getElementById(formId).submit();
            }
        }
    </script>
} 