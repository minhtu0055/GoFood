@model GoFood.ViewModels.Catalog.Vouchers.VoucherViewModel
@using GoFood.Data.Enums
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Chi tiết voucher";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="fw-bold py-3 mb-4">
                <span class="text-muted fw-light">Voucher /</span> Chi tiết
            </h4>
        </div>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">
                <i class="bx bx-edit-alt me-1"></i> Chỉnh sửa
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bx bx-arrow-back me-1"></i> Quay lại
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">Thông tin voucher</h5>
                    <small class="text-muted float-end">
                        <span class="badge bg-label-@GetStatusColor(Model.Status)">@GetStatusName(Model.Status)</span>
                    </small>
                </div>

                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Mã voucher</label>
                                <p class="form-control-static">
                                    <span class="badge bg-label-dark">@Model.Code</span>
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Tên voucher</label>
                                <p class="form-control-static">@Model.Name</p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Mô tả</label>
                                <p class="form-control-static">@Model.Description</p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Loại giảm giá</label>
                                <p class="form-control-static">
                                    @if (Model.DiscountType == DiscountType.Percentage)
                                    {
                                        <span class="badge bg-label-info">Giảm @Model.DiscountValue%</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-primary">Giảm @Model.DiscountValue.ToString("N0")đ</span>
                                    }
                                </p>
                            </div>
                            @if (Model.MinimumOrderValue.HasValue)
                            {
                                <div class="mb-3">
                                    <label class="form-label text-muted">Đơn hàng tối thiểu</label>
                                    <p class="form-control-static">
                                        <span class="badge bg-label-warning">@Model.MinimumOrderValue.Value.ToString("N0")đ</span>
                                    </p>
                                </div>
                            }
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Thời gian áp dụng</label>
                                <p class="form-control-static">
                                    <i class="bx bx-calendar text-primary me-1"></i>
                                    Từ: @Model.StartDate.ToString("dd/MM/yyyy HH:mm")
                                    <br />
                                    <i class="bx bx-calendar text-primary me-1"></i>
                                    Đến: @Model.EndDate.ToString("dd/MM/yyyy HH:mm")
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Số lần sử dụng</label>
                                <p class="form-control-static">
                                    <i class="bx bx-check-circle text-success me-1"></i>
                                    <span>Đã dùng: @Model.UsageCount lần</span>
                                    @if (Model.UsageLimit.HasValue)
                                    {
                                        <br />
                                        <i class="bx bx-info-circle text-info me-1"></i>
                                        <span>Giới hạn: @Model.UsageLimit lần</span>
                                    }
                                    else
                                    {
                                        <br />
                                        <i class="bx bx-infinite text-info me-1"></i>
                                        <span>Không giới hạn số lần sử dụng</span>
                                    }
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Thời gian tạo/cập nhật</label>
                                <p class="form-control-static">
                                    <i class="bx bx-time-five text-primary me-1"></i>
                                    Tạo: @Model.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                                    <br />
                                    <i class="bx bx-revision text-primary me-1"></i>
                                    Cập nhật: @(Model.ModifiedDate?.ToString("dd/MM/yyyy HH:mm") ?? "Chưa cập nhật")
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusName(PromotionStatus status)
    {
        switch (status)
        {
            case PromotionStatus.Active:
                return "Đang hoạt động";
            case PromotionStatus.Inactive:
                return "Chưa hoạt động";
            case PromotionStatus.Expired:
                return "Đã hết hạn";
            default:
                return status.ToString();
        }
    }

    string GetStatusColor(PromotionStatus status)
    {
        switch (status)
        {
            case PromotionStatus.Active:
                return "success";
            case PromotionStatus.Inactive:
                return "warning";
            case PromotionStatus.Expired:
                return "danger";
            default:
                return "danger";
        }
    }
} 